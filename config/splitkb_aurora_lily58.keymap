/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define LOWER 1
#define RAISE 2
#define GAMING 3

#define DISPLAY_INIT_PRIORITY 95


&led_strip {
    chain-length = <5>;
};

/ {
    DEVICE_AND_API_INIT(ssd1306, DT_INST_LABEL(0), ssd1306_init,
                &ssd1306_driver, NULL,
                POST_KERNEL, DISPLAY_INIT_PRIORITY,
                &ssd1306_driver_api);

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
  &kp ESC  &kp N1  &kp N2    &kp N3    &kp N4     &kp N5                          &kp N6        &kp N7     &kp N8   &kp N9    &kp N0      &kp BACKSPACE
  &kp TAB   &kp Q   &kp W     &kp F     &kp P      &kp G                           &kp J         &kp L      &kp U    &kp Y  &kp SEMI    &kp RIGHT_SHIFT
&kp LSHFT   &kp A   &kp R     &kp S     &kp T      &kp D                           &kp H         &kp N      &kp E    &kp I     &kp O            &kp SQT
&kp LCTRL   &kp Z   &kp X     &kp C     &kp V      &kp B  &kp LBKT   &kp RBKT      &kp K         &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp RIGHT_CONTROL
                           &kp LALT  &kp LGUI  &mo LOWER   &kp RET  &kp SPACE  &mo RAISE  &kp LEFT_ALT   &kp RGUI
            >;
        };

        lower_layer {
            bindings = <
&bt BT_CLR        &bt BT_SEL 0      &bt BT_SEL 1        &bt BT_SEL 2   &bt BT_SEL 3  &bt BT_SEL 4                        &trans    &trans  &trans    &trans     &trans   &trans
    &kp F1              &kp F2            &kp F3              &kp F4         &kp F5        &kp F6                        &kp F7    &kp F8  &kp F9   &kp F10    &kp F11  &kp F12
    &trans  &kp LC(LEFT_ARROW)  &kp LC(UP_ARROW)  &kp LC(DOWN_ARROW)  &kp LC(RIGHT)        &trans                        &trans  &kp LEFT  &kp UP  &kp DOWN  &kp RIGHT   &trans
    &trans              &trans            &trans              &trans         &trans        &trans     &trans     &trans  &trans    &trans  &trans    &trans     &trans   &trans
                                                              &trans         &trans        &trans  &kp SPACE  &kp ENTER  &trans    &trans  &trans
            >;
        };

        raise_layer {
            bindings = <
&trans  &trans  &trans  &trans   &trans   &trans                         &trans        &trans         &trans                &trans            &trans  &trans
&trans  &trans  &trans  &trans   &trans   &trans                         &trans        &trans         &trans                &trans            &trans  &trans
&trans  &kp F1  &kp F2  &kp F3   &kp F4   &kp F5                         &kp F6     &kp SLASH  &kp BACKSLASH  &kp NON_US_BACKSLASH  &kp LS(NUMBER_1)  &trans
&trans  &kp F7  &kp F8  &kp F9  &kp F10  &kp F11     &trans     &trans  &kp F12  &kp KP_MINUS    &kp KP_PLUS          &kp KP_EQUAL     &kp LS(MINUS)  &trans
                        &trans   &trans   &trans  &kp SPACE  &kp ENTER   &trans        &trans    &tog GAMING
            >;
        };

        gaming_layer {
            bindings = <
  &kp ESC  &kp N1  &kp N2    &kp N3    &kp N4     &kp N5                          &kp N6    &kp N7       &kp N8   &kp N9    &kp N0  &kp BACKSPACE
  &kp TAB   &kp Q   &kp W     &kp E     &kp R      &kp T                           &kp Y     &kp U        &kp I    &kp O     &kp P      &kp MINUS
&kp LSHFT   &kp A   &kp S     &kp D     &kp F      &kp G                           &kp H     &kp J        &kp K    &kp L  &kp SEMI        &kp SQT
&kp LCTRL   &kp Z   &kp X     &kp C     &kp V      &kp B     &kp UP  &kp RBKT      &kp N     &kp M    &kp COMMA  &kp DOT  &kp FSLH      &kp RSHFT
                           &kp LALT  &kp LGUI  &mo LOWER  &kp SPACE   &kp RET  &mo RAISE  &kp LALT  &tog GAMING
            >;
        };
    };
};
